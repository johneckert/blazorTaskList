#pragma checksum "/Users/John/Development/Projects/blazorTaskList/Pages/List.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7cf6420a0305caec01c59d462a258df88f3d69c3"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace blazorTaskList.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using blazorTaskList;
    using blazorTaskList.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/list")]
    public class List : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 18 "/Users/John/Development/Projects/blazorTaskList/Pages/List.cshtml"
            
    [Parameter]
    private string Title { get; set; }
    
    private string newItem;

    private IList<ListItem> listItems = new List<ListItem>();

    
    private void AddItem()
    {
        if (!string.IsNullOrWhiteSpace(newItem))
        {
            listItems.Add(new ListItem { Content = newItem, Complete = false, ID = Guid.NewGuid() });
            newItem = string.Empty;
        }
    }

    private string CrossedOut(Guid id) {
        var CurrentItem = listItems.First(item => item.ID == id);
        if (CurrentItem.Complete) {
            return "strike-through";
        }
        else {
            return "";
        }
    }

    private void ToggleComplete(Guid id) {
        var CurrentItem = listItems.First(item => item.ID == id);
        CurrentItem.Complete = !CurrentItem.Complete;
    }

    public class ListItem {
        public Guid ID {get; set; }
        public string Content { get; set; }
        public bool Complete { get; set; }
    }


#line default
#line hidden
    }
}
#pragma warning restore 1591
